@using EniacSpi.Objects
@model EniacSpi.Models.HostViewModel

@section Scripts{
    <script type="text/javascript">
        (function () {

            //add function for infiltration check
            @*if(@Html.Raw((Model.IsCracking && Model.SelectedNetwork != null).ToString().ToLower())){
                if(@Html.Raw(Model.SelectedNetwork.MAC) ==  $(this).find("option:selected").val()){
                    $("#NetworkInfiltration").attr("disabled", "disabled").off('click');
                }
            }*@

            $('#NetworkDropDownList').change(function (e) {

                $('#NetworkInformation').load('@Url.Action("NetworkInformation", "Host", new { Name=Model.Name})' + '&selectedMAC=' + $(this).find("option:selected").val());
                $('#NetworkInfiltration').load('@Url.Action("NetworkInfiltration", "Host", new { Name = Model.Name})' + '&selectedMAC=' + $(this).find("option:selected").val());

                @*if( (@Html.Raw(Model.SelectedNetwork != null).ToString().ToLower()) ) {
                    if(@Html.Raw(Model.SelectedNetwork.MAC) == $(this).find("option:selected").val()) {
                        $('#NetworkInfiltration').addClass("disabled");
                    }
                }*@

            });

            $('#TargetHostDropDownList').change(function () {
                $('#TargetHostInformation').load('@Url.Action("TargetHostInformation", "Host", new { Name=Model.Name})' + '&selectedMAC=' + $('#TargetHostDropDownList option:selected').val());
            });

        }());
    </script>
}

<h3>Host - @Model.Name</h3>
<hr />

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            <h4>Network selection</h4>
            @Html.DropDownList("NetworkDropDownList", Model.AvailableNetworkDropDownList, String.Format("--Select a target network--"))          
            <div id="NetworkInformation">
                @Html.Action("NetworkInformation", "Host", new { Name = Model.Name, selectedMAC = Model.SelectedNetwork.MAC})  
            </div>
        </div>
        <div class="col-md-6">
            <h4>Network infiltration</h4>
            <div id="NetworkInfiltration">
                @Html.Action("NetworkInfiltration", "Host", new { Name = Model.Name, selectedMAC = Model.SelectedNetwork.MAC })     
            </div>       
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <h4>Host selection</h4>
            @Html.DropDownList("TargetHostDropDownList", Model.AvailableTargetHostsDropDownList, "--Select a target host--")
            <div id="TargetHostInformation">
            </div>
        </div>
        <div class="col-md-8">
            <h4>Host traffic</h4>
            <!--Big box o' dank traffic and a solution to save packages goes here-->
        </div>
    </div>
</div>








@*<div>
        <h4>Host - model.Name</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Address)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Address)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.SelectedNetworkIndex)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.SelectedNetworkIndex)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsCracked)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsCracked)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsCracking)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsCracking)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CrackProgress)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CrackProgress)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.SelectedHostIndex)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.SelectedHostIndex)
            </dd>

        </dl>
    </div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@
